import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import './Products.css';

export function ItemBox({ item }) {
  return (
    <div className="ItemBox">
      <img src={item.img} alt='product' />
      <Link to={`/products/${item.id}`}>
        <h2>{item.name}</h2>
      </Link>
      <div className="itemBoxSubDiv">
        <span>₹{item.price}</span>
        <span>★{item.rating}</span>
      </div>
    </div>
  );
}

function Products() {
  const [items, setItems] = useState([]);
  const [filteredItems, setFilteredItems] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('');

  useEffect(() => {
    const data = require('./test/items.json'); // Replace with your JSON file path
    setItems(data);
  }, []);

  const handleSearchChange = (event) => {
    const searchTerm = event.target.value.toLowerCase();
    setSearchTerm(searchTerm);

    if (searchTerm) {
      const filteredProducts = items.filter((item) => {
        const nameMatch = item.name.toLowerCase().includes(searchTerm);
        const categoryMatch =
          selectedCategory === '' || item.gender === selectedCategory;
        return nameMatch && categoryMatch;
      });
      setFilteredItems(filteredProducts);
    } else {
      // Reset filteredItems to show all items
      setFilteredItems(items);
    }
  };

  const handleCategoryChange = (event) => {
    const selectedCategory = event.target.value;
    setSelectedCategory(selectedCategory);

    if (searchTerm) {
      handleSearchChange(event);
    } else {
      const filteredProducts = selectedCategory === '' ? items : items.filter((item) => item.gender === selectedCategory);
      setFilteredItems(filteredProducts);
    }
  };

  return (
    <div className="products-page">
      <div className="categorySelector">
        <form id='categoryAndSearchForm'>
          <input
            type="search" id="searchBox"
            placeholder="Search Products"
            onChange={handleSearchChange}
          />
          <label>Category:</label>
          <div className="categoryRadioButtons">
            <input
              type="radio"
              name="category"
              value=""
              checked={selectedCategory === ''}
              onChange={handleCategoryChange}
            />
            <label htmlFor="all">All</label>
            <br />
            <input
              type="radio"
              name="category"
              value="Men"
              checked={selectedCategory === 'Men'}
              onChange={handleCategoryChange}
            />
            <label htmlFor="Men">Men</label>
            <br />
            <input
              type="radio"
              name="category"
              value="Women"
              checked={selectedCategory === 'Women'}
              onChange={handleCategoryChange}
            />
            <label htmlFor="Women">Women</label>
            <br />
            <input
              type="radio"
              name="category"
              value="Unisex"
              checked={selectedCategory === 'unisex'}
              onChange={handleCategoryChange}
            />
            <label htmlFor="unisex">Unisex</label>
          </div>
        </form>
      </div>

      {filteredItems.length > 0 ? (
        <div className="products-container">
          {filteredItems.map((item) => (
            <ItemBox key={item.id} item={item} />
          ))}
        </div>
      ) : null}
    </div>
  );
}

export default Products;
